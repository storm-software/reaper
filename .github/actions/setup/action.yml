name: "Install"
description: "Install and pre-build"
inputs:
  storm_bot_github_token:
    description: The github token of the Storm bot
    required: true
  storm_bot_private_key:
    description: The private key of the Storm bot
    required: true
  storm_bot_passphrase:
    description: The passphrase of the Storm bot
    required: true

runs:
  using: composite
  steps:
    - name: Setup Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.4
        registry-url: "https://registry.npmjs.org"

    - uses: actions/checkout@v4
      name: Checkout [Pull Request]
      if: ${{ github.event_name == 'pull_request' }}
      with:
        # By default, PRs will be checked-out based on the Merge Commit, but we want the actual branch HEAD.
        ref: ${{ github.event.pull_request.head.sha }}
        # We need to fetch all branches and commits so that Nx affected has a base to compare against.
        fetch-depth: 0
        token: ${{ inputs.storm_bot_github_token }}

    - name: Setup GPG
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ inputs.storm_bot_private_key }}
        passphrase: ${{ inputs.storm_bot_passphrase }}

    - uses: actions/checkout@v4
      name: Checkout [Default Branch]
      if: ${{ github.event_name != 'pull_request' }}
      with:
        # We need to fetch all branches and commits so that Nx affected has a base to compare against.
        fetch-depth: 0
        token: ${{ inputs.storm_bot_github_token }}

    - name: Setup ${{ inputs.packageManager }}
      id: pnpm_setup
      uses: pnpm/action-setup@v4.0.0
      with:
        version: ${{ steps.pnpm.outputs.version }}
        run_install: false
        package_json_file: ./package.json

    - name: Restore cached npm dependencies
      id: cache-dependencies-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          node_modules
          ~/.cache/Cypress # needed for the Cypress binary
        key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}

    - name: Install pnpm package manager
      shell: bash
      run: pnpm install --no-frozen-lockfile
      working-directory: ./
      env:
        # postinstall uses this
        SHOULD_UNLOCK_GIT_CRYPT: "1"

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install Zig toolchain
      uses: korandoru/setup-zig@v1
      with:
        # Note: make sure you are using a recent version of zig (the one below isn't kept in sync with new releases)
        zig-version: 0.13.0

    - name: Install Cargo Lambda
      uses: jaxxstorm/action-install-gh-release@v1.9.0
      with:
        repo: cargo-lambda/cargo-lambda
        # Note: make sure you are using a recent version of cargo-lambda (the one below isn't kept in sync with new releases)
        tag: v1.3.0 # Remove this if you want to grab always the latest version
        platform: linux # Other valid options: 'windows' or 'darwin'
        arch: aarch64 # Other valid options for linux: 'aarch64'
