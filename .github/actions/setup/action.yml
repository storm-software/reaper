name: "Install"
description: "Install and pre-build"
inputs:
  storm_bot_private_key:
    description: The private key of the Storm bot
    required: true
  storm_bot_passphrase:
    description: The passphrase of the Storm bot
    required: true

runs:
  using: composite
  steps:
    - name: Setup GPG
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ inputs.storm_bot_private_key }}
        passphrase: ${{ inputs.storm_bot_passphrase }}

    - name: Check pnpm version
      shell: bash
      id: pnpm
      run: |
        PNPM_VERSION=${PNPM_VERSION:-7.30.5}
        PKG_JSON=$(cat package.json | jq -r '.packageManager' | awk -F@ '{print $2}')
        if [ ! -z $PKG_JSON ]; then
          PNPM_VERSION=$PKG_JSON
        fi
        if [ ! -z pnpm ]; then
          PNPM_VERSION=9.6.0
        fi
        echo "Using PNPM version $PNPM_VERSION"
        echo "version=$PNPM_VERSION" >> $GITHUB_OUTPUT

    - name: Setup PNPM
      id: pnpm_setup
      uses: pnpm/action-setup@v4.0.0
      with:
        version: ${{ steps.pnpm.outputs.version }}
        run_install: false
        package_json_file: ./package.json

    - name: Restore cached npm dependencies
      id: cache-dependencies-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          node_modules
          ~/.cache/Cypress # needed for the Cypress binary
        key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}

    - name: Install asdf
      uses: asdf-vm/actions/setup@v3

    - name: Install NodeJs with asdf
      run: |
        asdf plugin add nodejs
        asdf plugin add pnpm
        asdf plugin add rust
        asdf plugin add zig
        asdf install nodejs
        asdf install pnpm
        asdf install rust
        asdf install zig
      shell: bash

    - name: Set up npm registry
      uses: actions/setup-node@v4
      with:
        registry-url: https://registry.npmjs.org/
        node-version-file: .github/.nvmrc
        cache: pnpm
        cache-dependency-path: pnpm-lock.yaml

    - name: Install pnpm package manager
      shell: bash
      run: pnpm install --no-frozen-lockfile
      env:
        # postinstall uses this
        SHOULD_UNLOCK_GIT_CRYPT: "1"

    - name: Setup pnpm config registry
      run: pnpm config set registry https://registry.npmjs.org
      shell: bash

    - name: Cache npm dependencies
      id: cache-dependencies-save
      uses: actions/cache/save@v4
      with:
        path: |
          node_modules
          ~/.cache/Cypress # needed for the Cypress binary
        key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

    - name: Configure git
      run: |
        git config user.name "Stormie-Bot"
        git config user.email "Stormie-Bot@users.noreply.github.com"
        git config lfs.allowincompletepush true
        git config --global init.defaultBranch main
        npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      shell: bash

    # - name: Add rust toolchain
    #   uses: dtolnay/rust-toolchain@nightly
    #   with:
    #     toolchain: nightly
    #     components: clippy,rustfmt

    # - name: Install Zig toolchain
    #   uses: korandoru/setup-zig@v1
    #   with:
    #     # Note: make sure you are using a recent version of zig (the one below isn't kept in sync with new releases)
    #     zig-version: 0.13.0

    - name: Install Cargo Lambda
      uses: jaxxstorm/action-install-gh-release@v1.9.0
      with:
        repo: cargo-lambda/cargo-lambda
        # Note: make sure you are using a recent version of cargo-lambda (the one below isn't kept in sync with new releases)
        tag: v1.3.0 # Remove this if you want to grab always the latest version
        platform: linux # Other valid options: 'windows' or 'darwin'
        # arch: aarch64 # Other valid options for linux: 'aarch64'

    - uses: Swatinem/rust-cache@v2
      with:
        key: "reaper-${{ hashFiles('**/Cargo.lock') }}"
